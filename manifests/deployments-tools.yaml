# Criando RabbitMQ Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
  namespace: nsadadevopsmod3
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        env:
          - name:  RABBITMQ_DEFAULT_USER
            valueFrom:
              secretKeyRef:
                name:  rabbitmq-credentials
                key:  RABBITMQ_ROOT_USR
          - name:  RABBITMQ_DEFAULT_PASS
            valueFrom:
              secretKeyRef:
                name:  rabbitmq-credentials
                key:  RABBITMQ_ROOT_PWD
        volumeMounts:
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq/
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - rabbitmq-diagnostics ping -q
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            memory: 256Mi
            cpu: "0.4"
          requests:
            memory: 128Mi
            cpu: "0.2"
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-configmap
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc

---
# Criando Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: nsadadevopsmod3
  labels:
      app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis/redis-stack:7.2.0-v10
        ports:
        - containerPort: 6379
        - containerPort: 8001
        env:
          - name: REDIS_ARGS
            value: "--save 60 1000 --appendonly yes"
          - name: REDISTIMESERIES_ARGS
            value: "RETENTION_POLICY=20"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        startupProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            memory: 256Mi
            cpu: "0.4"
          requests:
            memory: 128Mi
            cpu: "0.2"
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc

---
#Criando Minio Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: nsadadevopsmod3
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2024-03-07T00-43-48Z
        args:
        - server
        - /data
        - --console-address
        - ":9001"
        ports:
        - containerPort: 9000
        - containerPort: 9001
        volumeMounts:
        - name: minio-data
          mountPath: /data
        env:
        - name: MINIO_BROWSER_REDIRECT_URL
          value: "http://projadadevops.local/minioapi/"
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: MINIO_ROOT_USR
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: MINIO_ROOT_PWD
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c 
            - mc alias set myminio http://localhost:9000 "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD";
            - mc admin info myminio --insecure;
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            memory: 256Mi
            cpu: "0.4"
          requests:
            memory: 128Mi
            cpu: "0.2"
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-pvc
